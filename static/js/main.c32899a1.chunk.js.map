{"version":3,"sources":["App.tsx","components/GoodsList.tsx","data/GoodsFromServer.ts","index.tsx"],"names":["SortType","GoodsList","goods","map","goodItem","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isResetBtn","reorderedGoods","visibleGoods","sort","previousGood","currentGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAUKA,E,4DCJQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCXAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,sBFAGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAaF,IAAaX,EAASU,MAAQF,EAC3CM,EA9BD,SACLZ,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOb,GAmBzB,OAjBAa,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQP,GACN,KAAKX,EAASmB,SACZ,OAAOF,EAAaG,cAAcF,GAEpC,KAAKlB,EAASqB,OACZ,OAAOJ,EAAaK,OAASJ,EAAYI,OAE3C,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EAOgBS,CACrBnB,EACA,CACEM,WACAH,eAYJ,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CACE,WAAYhB,IAAaX,EAASmB,WAIxCS,QAtBgB,kBAAMhB,EAAYZ,EAASmB,WAW7C,iCAgBA,wBACEO,KAAK,SACLD,UACEE,IACE,SACA,aACA,CACE,WAAYhB,IAAaX,EAASqB,SAIxCO,QArCmB,kBAAMhB,EAAYZ,EAASqB,SA0BhD,4BAgBA,wBACEK,KAAK,SACLD,UACEE,IACE,SACA,aACA,CACE,YAAanB,IAInBoB,QApDc,kBAAMnB,GAAeD,IAyCrC,qBAgBCK,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA5Da,WACrBnB,GAAc,GACdG,EAAYZ,EAASU,OAuDf,sBAUJ,cAAC,EAAD,CAAWR,MAAOY,QG9HxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c32899a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nimport { goodsFromServer } from './data/GoodsFromServer';\n\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((previousGood, currentGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return previousGood.localeCompare(currentGood);\n\n      case SortType.LENGTH:\n        return previousGood.length - currentGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isResetBtn = sortType !== SortType.NONE || isReversed;\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortType,\n      isReversed,\n    },\n  );\n\n  const handleSortByABC = () => setSortType(SortType.ALPHABET);\n  const handleSortByLength = () => setSortType(SortType.LENGTH);\n  const handleReverse = () => setIsReversed(!isReversed);\n  const resetListItems = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )\n          }\n          onClick={handleSortByABC}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )\n          }\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )\n          }\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isResetBtn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetListItems}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((goodItem) => (\n      <li\n        data-cy=\"Good\"\n        key={goodItem}\n      >\n        {goodItem}\n      </li>\n    ))}\n  </ul>\n);\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}